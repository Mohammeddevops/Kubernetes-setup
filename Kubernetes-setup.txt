##################################################################
# 			   Kubernetes  				 #
##################################################################

sudo apt update
sudo apt upgrade

sudo apt install docker.io
docker --version
sudo systemctl start docker
sudo systemctl enable docker


sudo apt-get update
###########################################################################################
#	apt-transport-https may be a dummy package; if so, you can skip that package      #
###########################################################################################

sudo apt-get install -y apt-transport-https ca-certificates curl gpg
mkdir -p /etc/apt/keyrings
curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.28/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.28/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list
sudo apt-get update
sudo apt-get install -y kubelet kubeadm kubectl
sudo apt-mark hold kubelet kubeadm kubectl

# upto her both in master and node

# run this below command on master
kubeadm init
	# follow the steps after running this
	# run 4 command one by one which you will get after running kubeadm init
	# copy the token from master and save it past it on the worker node.

   # command look like this 
	mkdir -p $HOME/.kube
	sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
	sudo chown $(id -u):$(id -g) $HOME/.kube/config
	EXPORT.......

   # token like this
	kubeadm join 172.31.41.116:6443 --token 6hhty0.us8oldyrgs6yn6b3 --discovery-token-ca-cert-hash sha256:046c3fa............

# run this below command on the master 
curl https://raw.githubusercontent.com/projectcalico/calico/v3.26.3/manifests/calico.yaml -O
kubectl apply -f calico.yaml

kubectl get nodes
kubectl get pods -A
# the deployment.yml and service.yml

##################################################################



sudo su
sudo apt-get update


sudo apt install docker.io
docker --version
sudo systemctl start docker
sudo systemctl enable docker 

sudo swapoff -a

sudo curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add

##### This GPG key will establish intra cluster communication between master & node #####

sudo mkdir -p /etc/apt/sources.list.d
cd /etc/apt/sources.list.d
sudo nano kubernetes.list
~~~ ad this below line inside kubernetes.list ~~~
	deb http://apt.kubernetes.io/ kubernetes-xenial main

sudo apt-get update
sudo apt-get upgrade
sudo apt-get install kubelet kubeadm kubectl kubernetes-cni 

# upto her common on all node

# bootstraping the master node
sudo apt-get update
kubeadm init

sudo kubeadm init --pod-network-cidr=192.168.0.0/16


#copy the 3 cmd you wil get here affter running the above cmd>
# and copy the token to connect with target machine
	mkdir -p $HOME/.kube
	sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
	sudo chown $(id -u):$(id -g) $HOME/.kube/config

# token
kubeadm join 172.31.41.116:6443 --token 6hhty0.us8oldyrgs6yn6b3 --discovery-token-ca-cert-hash sha256:046c3fae647dd4a8345cf75fcd8d5502720b6e7c1a75916b44b0af99b3087713 

sudo kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml
sudo kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/k8s-manifests/kube-flannel-rbac.yml

sudo apt-get update


# GO TO MASTER AND RUN THIS COMMAND

kubectl get nodes

sudo su
sudo apt update && apt â€“y install docker.io

#install Kubectl 

curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl && chmod +x ./kubectl && sudo mv ./kubectl /usr/local/bin/kubectl



sudo nano /etc/docker/daemon.json
{
  "metrics-addr": "0.0.0.0:9323",
  "experimental": true,
  "labels": ["provider=prometheus"]
}
==================================================
#install Minikube 

curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
sudo install minikube-linux-amd64 /usr/local/bin/minikube

#curl -Lo minikube https://storage.googleapis.com/miniku... && chmod +x minikube && sudo mv minikube /usr/local/bin/
apt install contract
minikube start --vm-driver=none
minikube status
kubectl version
kubectl get nodes

##############################################################

sudo nano /etc/systemd/system/kubelet.service


[Unit]
Description=Kubernetes Kubelet
Documentation=https://kubernetes.io/docs/concepts/overview/components/#kubelet
After=docker.service

[Service]
ExecStart=/usr/bin/kubelet --config=<KUBELET_CONFIG_PATH> --container-runtime=docker
Restart=on-failure
KillMode=process

[Install]
WantedBy=multi-user.target


sudo systemctl daemon-reload
sudo systemctl start kubelet


##################################################################
# 			   Kubernetes  				 #
##################################################################
sudo apt-get update
# apt-transport-https may be a dummy package; if so, you can skip that package
sudo apt-get install -y apt-transport-https ca-certificates curl gpg

mkdir -p /etc/apt/keyrings

curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.28/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg

echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.28/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list

sudo apt-get update
sudo apt-get install -y kubelet kubeadm kubectl
sudo apt-mark hold kubelet kubeadm kubectl

# upto her both in master and node

# run this below command on master
kubeadm init
	# follow the steps after running this
	# run 4 command one by one which you will get after running kubeadm init
	# copy the token from master and save it past it on the worker node.

   # command look like this 
	mkdir -p $HOME/.kube
	sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
	sudo chown $(id -u):$(id -g) $HOME/.kube/config
	EXPORT.......

   # token like this
	kubeadm join 172.31.41.116:6443 --token 6hhty0.us8oldyrgs6yn6b3 --discovery-token-ca-cert-hash sha256:046c3fa............

# run this below command on the master 
curl https://raw.githubusercontent.com/projectcalico/calico/v3.26.3/manifests/calico.yaml -O
kubectl apply -f calico.yaml

kubectl get nodes
kubectl get pods -A
# the deployment.yml and service.yml

##################################################################



